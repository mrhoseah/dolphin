{
	"info": {
		"_postman_id": "dolphin-framework-api",
		"name": "Dolphin Framework API",
		"description": "Complete API collection for Dolphin Framework testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "dolphin-framework"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Authenticate user and get access token"
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "me"]
						},
						"description": "Get current authenticated user information"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user login, registration, and token management"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users?page=1&limit=10",
							"host": ["{{base_url}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get paginated list of users"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/1",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "1"]
						},
						"description": "Get specific user by ID"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"jane@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": ["{{base_url}}"],
							"path": ["api", "users"]
						},
						"description": "Create a new user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane.smith@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/1",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "1"]
						},
						"description": "Update user information"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/1",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "1"]
						},
						"description": "Delete a user"
					},
					"response": []
				}
			],
			"description": "User management endpoints for CRUD operations"
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get All Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts?page=1&limit=10",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get paginated list of posts"
					},
					"response": []
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Get specific post by ID"
					},
					"response": []
				},
				{
					"name": "Create Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My First Post\",\n  \"content\": \"This is the content of my first post.\",\n  \"published\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"]
						},
						"description": "Create a new post"
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Post Title\",\n  \"content\": \"Updated content for the post.\",\n  \"published\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Update post information"
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Delete a post"
					},
					"response": []
				}
			],
			"description": "Post management endpoints for CRUD operations"
		},
		{
			"name": "Storage",
			"item": [
				{
					"name": "Upload File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "path",
									"value": "uploads/",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/storage/upload",
							"host": ["{{base_url}}"],
							"path": ["api", "storage", "upload"]
						},
						"description": "Upload a file to storage"
					},
					"response": []
				},
				{
					"name": "Download File",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/storage/download/uploads/file.jpg",
							"host": ["{{base_url}}"],
							"path": ["api", "storage", "download", "uploads", "file.jpg"]
						},
						"description": "Download a file from storage"
					},
					"response": []
				},
				{
					"name": "List Files",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/storage/list/uploads/",
							"host": ["{{base_url}}"],
							"path": ["api", "storage", "list", "uploads", ""]
						},
						"description": "List files in storage directory"
					},
					"response": []
				},
				{
					"name": "Delete File",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/storage/delete/uploads/file.jpg",
							"host": ["{{base_url}}"],
							"path": ["api", "storage", "delete", "uploads", "file.jpg"]
						},
						"description": "Delete a file from storage"
					},
					"response": []
				}
			],
			"description": "File storage management endpoints"
		},
		{
			"name": "Cache",
			"item": [
				{
					"name": "Get Cache Value",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/cache/user:123",
							"host": ["{{base_url}}"],
							"path": ["api", "cache", "user:123"]
						},
						"description": "Get a value from cache"
					},
					"response": []
				},
				{
					"name": "Set Cache Value",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"user:123\",\n  \"value\": \"user data\",\n  \"ttl\": 3600\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/cache",
							"host": ["{{base_url}}"],
							"path": ["api", "cache"]
						},
						"description": "Set a value in cache with TTL"
					},
					"response": []
				},
				{
					"name": "Delete Cache Value",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/cache/user:123",
							"host": ["{{base_url}}"],
							"path": ["api", "cache", "user:123"]
						},
						"description": "Delete a value from cache"
					},
					"response": []
				},
				{
					"name": "Clear Cache",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/cache/clear",
							"host": ["{{base_url}}"],
							"path": ["api", "cache", "clear"]
						},
						"description": "Clear all cache"
					},
					"response": []
				}
			],
			"description": "Cache management endpoints"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Dispatch Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"user.created\",\n  \"payload\": {\n    \"user_id\": 123,\n    \"email\": \"user@example.com\",\n    \"username\": \"john_doe\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/events/dispatch",
							"host": ["{{base_url}}"],
							"path": ["api", "events", "dispatch"]
						},
						"description": "Dispatch an event"
					},
					"response": []
				},
				{
					"name": "Get Event History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/events/history?event=user.created&limit=10",
							"host": ["{{base_url}}"],
							"path": ["api", "events", "history"],
							"query": [
								{
									"key": "event",
									"value": "user.created"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get event history"
					},
					"response": []
				}
			],
			"description": "Event management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8080');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract tokens from login response",
					"if (pm.response.json() && pm.response.json().data) {",
					"    const data = pm.response.json().data;",
					"    if (data.access_token) {",
					"        pm.environment.set('access_token', data.access_token);",
					"    }",
					"    if (data.refresh_token) {",
					"        pm.environment.set('refresh_token', data.refresh_token);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		}
	]
}